[metadata]
name = solo_epd_loader
author = Jan Gieseler
author_email = jan.gieseler@utu.fi
license = BSD 3-clause
license_file = licenses/LICENSE.rst
url = https://github.com/jgieseler/solo-epd-loader
description = Data loader for Solar Orbiter/EPD energetic charged particle sensors EPT, HET, and STEP.
long_description = file: README.rst
classifiers =
  Intended Audience :: Science/Research
  License :: OSI Approved :: BSD License
  Natural Language :: English
  Operating System :: OS Independent
  Programming Language :: Python
  Programming Language :: Python :: 3.8
  Programming Language :: Python :: 3.9
  Programming Language :: Python :: 3.10
  Programming Language :: Python :: 3.11
  Programming Language :: Python :: 3.12
  Topic :: Scientific/Engineering :: Physics

[options]
zip_safe = False
packages = find:
include_package_data = True
python_requires = >=3.8
setup_requires = setuptools_scm
install_requires =
    astropy
    cdflib
    drms
    h5netcdf
    lxml
    matplotlib
    numpy
    pandas
    requests
    sunpy>=4.1.0
    tqdm
    zeep


[options.extras_require]
all =
test =
    pytest
    pytest-doctestplus
    pytest-cov
docs =
    sphinx
    sphinx-automodapi

[tool:pytest]
testpaths = "solo_epd_loader" "docs"
doctest_plus = enabled
text_file_format = rst
addopts = --doctest-rst
python_files =
    test_*.py
    *_test.py
    test.py
    tests.py

[coverage:run]
omit =
  # solo_epd_loader/__init*
  # solo_epd_loader/conftest.py
  # solo_epd_loader/*setup_package*
  *setup.py
  solo_epd_loader/setup*
  solo_epd_loader/tests/*
  solo_epd_loader/*/tests/*
  # solo_epd_loader/extern/*
  solo_epd_loader/version*
  # */solo_epd_loader/__init*
  # */solo_epd_loader/conftest.py
  # */solo_epd_loader/*setup_package*
  */solo_epd_loader/setup*
  */solo_epd_loader/tests/*
  */solo_epd_loader/*/tests/*
  # */solo_epd_loader/extern/*
  */solo_epd_loader/version*

[coverage:report]
exclude_lines =
  # Have to re-enable the standard pragma
  pragma: no cover
  # Don't complain about packages we have installed
  except ImportError
  # Don't complain if tests don't hit assertions
  raise AssertionError
  raise NotImplementedError
  # Don't complain about script hooks
  def main\(.*\):
  # Ignore branches that don't pertain to this version of Python
  pragma: py{ignore_python_version}
  # Don't complain about IPython completion helper
  def _ipython_key_completions_

[flake8]
select = E101,E11,E111,E112,E113,E121,E122,E123,E124,E125,E126,E127,E128,E129,E131,E133,E20,E211,E231,E241,E242,E251,E252,E26,E265,E266,E27,E301,E302,E303,E304,E305,E306,E401,E402,E502,E701,E711,E712,E713,E714,E722,E731,E901,E902,F822,F823,W191,W291,W292,W293,W391,W601,W602,W603,W604,W605,W690
